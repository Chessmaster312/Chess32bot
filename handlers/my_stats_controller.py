from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import bootstrap
from settings import config
db = bootstrap.DB().getInstance()


async def send_game_history_message(message):
    games = await db.get_last_10_games(str(message.from_user.id))
    if games:
        text = []
        for i, game in enumerate(games, start=1):
            date = game['date']
            side = game['side']
            history = game['history']
            text.append(f"{i}. *–¥–∞—Ç–∞*: {date}, *—Å—Ç–æ—Ä–æ–Ω–∞*: {side}\n*–∏—Å—Ç–æ—Ä–∏—è —Ö–æ–¥–æ–≤*:\n{history or '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}")
        text = "\n".join(text)
        print(text, flush=True)
    else:
        text = "üõë–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö, —Å—ã–≥—Ä–∞–π—Ç–µ –ø–∞—Ä—Ç–∏—é, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ö–æ–¥–æ–≤"
    await message.message.answer(f"–ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 –∏–≥—Ä:\n\n{text}", parse_mode = "markdown")
    await message.answer()

async def send_message(message):
    if not await db.check_premium(str(message.from_user.id)):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏, –æ—Ñ–æ—Ä–º–∏—Ç–µ!")
        return
    result = await db.get_user(str(message.from_user.id))
    users_text = f'*–†–µ–π—Ç–∏–Ω–≥ ELO*: {result.get("elo", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")}\n\n'\
                 f'*–í–∏–Ω—Ä–µ–π—Ç*: {result.get("winrate", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")}%\n\n'\
                 f'*–î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏*: {result.get("premium_time", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")}'
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üë©‚Äçüè´–†–∞–∑–±–æ—Ä –ø–∞—Ä—Ç–∏–∏', url=config.link_help_game)],
        [InlineKeyboardButton(text='üìù–ò—Å—Ç–æ—Ä–∏—è –ø–∞—Ä—Ç–∏–π', callback_data="game_history")]])
    await message.answer(users_text, reply_markup=keyboard, parse_mode="markdown")